package wp.api;

import haxe.extern.EitherType;
import php.NativeArray;
import php.NativeStructArray;
import wp.Post;

// for wp-includes/general-template.php
class GeneralTemplateApi implements Api {
  function get_header(?name:String):Void;  
  function get_footer(?name:String):Void;
  function get_sidebar(?name:String):Void;
  function get_template_part(slug:String, ?name:String):Void;
  function get_search_form(echo:Bool = true):Void;
  function wp_loginout(redirect:String = '', echo:Bool = false):String;
  function wp_logout_url(redirect:String = ''):String;
  function wp_login_url(redirect:String = '', force_reauth:Bool = false):Void;
  function wp_registration_url():String;
  function wp_login_form(args:NativeStructArray<Dynamic>):String;
  function wp_lostpassword_url(redirect:String = ''):String;
  function wp_register(before:String = '<li>', after:String = '</li>', echo:Bool = false):String;
  function wp_meta():Void;
  function bloginfo(show:String = ''):Void;
  function get_bloginfo(show:String = '', filter:String = 'raw'):String;
  function get_site_icon_url(size:Int = 512, url:String = '', blog_id:Int = 0):String;
  function site_icon_url(size:Int = 512, url:String = '', blog_id:Int = 0):Void;
  function has_site_icon(blog_id:Int = 0):Bool;
  function has_custom_logo(blog_id:Int = 0):Bool;
  function get_custom_logo(blog_id:Int = 0):String;
  function the_custom_logo(blog_id:Int = 0):Void;
  function wp_get_document_title():String;
  function wp_title(sep:String = '&raquo;', display:Bool = false, seplocation:String = ''):Null<String>;
  function single_post_title(prefix:String = '', display:Bool = false):String;
  function post_type_archive_title(prefix:String = '', display:Bool = false):String;
  function single_cat_title(prefix:String = '', display:Bool = false):String;
  function single_tag_title(prefix:String = '', display:Bool = false):String;
  function single_term_title(prefix:String = '', display:Bool = false):String;
  function single_month_title(prefix:String = '', display:Bool = false):String;
  function the_archive_title(before:String = '', after:String = ''):Void;
  function get_the_archive_title():String;
  function the_archive_description(before:String = '', after:String = ''):Void;
  function get_the_archive_description():String;
  function get_the_post_type_description():String;
  function get_archives_link(url:String, text:String, format:String = 'html', before:String = '', after:String = ''):String;
  function wp_get_archives(?args:NativeStructArray<Dynamic>):String;
  function calendar_week_mod(num:Int):Int;
  function get_calendar(initial:Bool = true, echo:Bool = false):String;
  function delete_get_calendar_cache():Void;
  function allowed_tags():String;
  function the_date_xml():Void;
  function the_date(d:String = '', before:String = '', after:String = '', echo:Bool = true):Null<String>;
  function get_the_date(d:String = '', ?post:EitherType<Post, Int>):EitherType<Bool, String>;
  function the_modified_date(d:String = '', before:String = '', after:String = '', echo:Bool = true):Null<String>;
  function get_the_modified_date(d:String = '', ?post:EitherType<Post, Int>):EitherType<Bool, String>;
  function the_time(d:String = ''):Void;
  function get_the_time(d:String = '', ?post:EitherType<Post, Int>):EitherType<Int, EitherType<String, Bool>>;
  function get_post_time(d:String = 'U', gmt:Bool = false, ?post:EitherType<Post, Int>, translate:Bool = false):EitherType<String, EitherType<Int, Bool>>;
  function the_modified_time(d:String = ''):Void;
  function get_the_modified_time(d:String = '', ?post:EitherType<Post, Int>):EitherType<Bool, String>;
  function get_post_modified_time(d:String = 'U', gmt:Bool = false, ?post:EitherType<Post, Int>, translate:Bool = false):EitherType<String, EitherType<Int, Bool>>;
  function the_weekday():Void;
  function the_weekday_date(before:String = '', after:String = ''):Void;
  function wp_head():Void;
  function wp_footer():Void;
  function feed_links(args:NativeStructArray<Dynamic>):Void;
  function feed_links_extra(args:NativeStructArray<Dynamic>):Void;
  function rsd_link():Void;
  function wlwmanifest_link():Void;
  function noindex():Void;
  function wp_no_robots():Void;
  function wp_site_icon():Void;
  function wp_resource_hints():Void;
  function wp_dependencies_unique_hosts():NativeArray;
  function user_can_richedit():Bool;
  function wp_default_editor():String;
  function wp_editor(content:String, editor_id:String, settings:NativeStructArray<Dynamic>):Void;
  function wp_enqueue_editor():Void;
  function wp_enqueue_code_editor(args:NativeStructArray<Dynamic>):Dynamic;
  function get_search_query(escaped:Bool = true):String;
  function the_search_query():Void;
  function get_language_attributes(doctype:String = 'html'):String;
  function language_attributes(doctype:String = 'html'):Void;
  function paginate_links(args:NativeStructArray<Dynamic>):EitherType<String, NativeStructArray<Dynamic>>;
  function wp_admin_css_color(key:String, name:String, url:String, colors:NativeArray, icons:NativeStructArray<Dynamic>):Void;
  function register_admin_color_schemes():Void;
  function wp_admin_css_uri(file:String = 'wp-admin'):String;
  function wp_admin_css(file:String = 'wp-admin', force_echo:Bool = false):Void;
  function add_thickbox():Void;
  function wp_generator():Void;
  function the_generator(type:String):Void;
  function get_the_generator(type:String = ''):Null<String>;
  function checked(checked:Dynamic, current:Bool = true, echo:Bool = false):String;
  function selected(selected:Dynamic, current:Bool = true, echo:Bool = false):String;
  function disabled(disabled:Dynamic, current:Bool = true, echo:Bool = false):String;
  function readonly(readonly:Dynamic, current:Bool = true, echo:Bool = false):String;
  function wp_heartbeat_settings(settings:NativeStructArray<Dynamic>):NativeStructArray<Dynamic>;
}
